<フレームワーク課題>


●Java EE(Java Platform,Enterprise Edition)

①概要
　Javaの標準仕様のフレームワーク。大規模システムに採用されている。

②特徴

【フルスタックフレームワーク】
　
 ServletやJSP,EJBやJavaの各種APIなど、大規模システムの構築に必要な機能がまとめて提供されている。


【Oracle社のサポート】
 
 世界中の技術者がチェックしているフレームワークでもあり、参考になる記事や書籍がある。
 Oracle社による研修や認定資格があるのも、他にはない特徴。


【アーキテクチャ】
 
 Java EEでは以下の4つのカテゴリに標準仕様を分類している。
 Webシステム以外の様々な用途にも適用できる点が特徴。

＜カテゴリ＞

・Webアプリケーション-HTMLを使用したWebアプリケーション構築に使用する。
(Servlet、JSP、JSF、WebSocket API、JSON APIなど)

・エンタープライズアプリケーション-分散処理、ビジネスロジック実装、バッチ、データベース連携などを取り扱う。
(EJB、JMS、CDI、Bean Validation、JPA、Batch、Concurrency Utilitiesなど)

・Webサービス-SOAPやRESTなどデータ送受信用のWebサービス構築に使用する。
(JAX-WS、JAX-RSなど)

・管理・セキュリティ-デプロイやセキュリティに関する内容を取り扱う。(JACCなど)

【デメリット】
 大きなフレームワークだけに更新頻度が遅い。
 最新技術を反映させるよりも標準仕様としての安定感が重視されている模様。


③導入方法

1.NetBeansのインストール

2.GlassFish(Full Platform)のインストール

3.NetBeansに手動でインストールしたGlassFishを追加する
・「ツール」→「サーバー」を選択
・「サーバーの追加」を選択
・画面指示に従って、手動インストールしたGlassFishを追加する

4.プロジェクトを作成する
・NetBeans上で、「ファイル」→「新規プロジェクト」を選択
・「カテゴリ」の中から「Java Web」→「プロジェクト」の「Webアプリケーション」を選択
・「プロジェクト名」に任意の名前を入力
・「サーバーと設定」で、先ほど登録したGlassFishを選択

5.起動
・「プロジェクトを実行する」
・GlassFish起動→アプリがデプロイされ、既定のブラウザで画面が表示される



●Play Framework

①概要
 
 Javaと、Javaとの連携が容易なプログラミング言語Scalaで書かれたオープンソースのフレームワーク。
 Rubyのフレームワーク「Ruby on Rails」、pythonのフレームワーク「Django」の思想に大きく影響を受けている。


②特徴

【軽量さ＆高い生産性】
 
 CPUリソースやメモリ使用量が少ない。
 そのため軽快に動作できるので、利用者の多いWebアプリケーションにも対応できる。
 Java標準のWebアプリケーション仕様であるJava EEに準拠していない代わりに、シンプルに開発を進められるメリットがある。


【デメリット】
 
 Play Frameworkは独自性が強く、学習コストがかかってしまうこと。


③導入方法

1.JDKのインストール(pathの設定および環境変数JAVA_HOMEの設定)

2.Play Frameworkのダウンロード
・Play Frameworkの公式ページからtypesafe-activatorをダウンロード
・ダウンロードしたファイルを解凍し、パスを通す

3.Play Frameworkのインストール
・pathを通したら、コマンドプロンプトでactivator.batがあるディレクトリに移動し、コマンド実行
（実行が通ればpathが通っている証拠）

4.新規プロジェクト作成
・playプロジェクトを作成ディレクトリに移動
・プロジェクトを作成するコマンドを実行
・自分が作成するプロジェクトに合わせてプロジェクト名を作成
・使用する言語の指定(Scalaを使用する場合はplay-scala)

5.playアプリケーションの起動
・プロジェクト作成完了後、Play Frameworkを起動し確認する
・「Welcome to play」の画面が表示される

6.Eclipseにプロジェクトをインポート



●Spring Framework

①概要
 
 Webアプリケーションフレームワークのひとつ。
 現在はJavaのWebアプリケーションフレームワークの中でも使われることが多く、主流になっている。


②特徴

【DIの採用】

 DIとは、Dependency Injectionの略。DIという仕組みが採用されていることで保守性が高いというメリットがある。
 Webアプリケーションの運用には保守が必要。保守をするときには、プログラムに変更を加えることもあるが、
 Spring FrameworkにDIが採用されていることにより、プログラムを独立させることができ、プログラムの変更が容易になっている。


【デメリット】

 Spring Frameworkのデメリットには、Javaの知識が必要な点と、日本語で書かれている情報が少ないこと。


③導入方法

1.Eclipseのインストール

2.Tomcatのダウンロード

3.EclipseにSpring Tool Suite(STS)プラグインをインストール
・Eclipseを起動
・「ヘルプ」→「Eclipseマーケットプレース(M)」を選択
・「Springツール」からインストール

4.EclipseにWTPプラグをインストール
・「ヘルプ」→「新規ソフトウェアのインストール」を選択しWTPプラグインをインストール

5.MVCプロジェクト作成
・「Spring」の「Spring Legacy Project」を選択
・テンプレートに「Spring MVC Project」を選択

6.MVCサンプルを動かす
・作成したプロジェクトから「実行」→「1さーばーで実行」を選択
・「Hello World!」ページが表示される




